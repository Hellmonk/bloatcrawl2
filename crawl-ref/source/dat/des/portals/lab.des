###############################################################################
# lab.des: Vaults particular to labyrinths. There are two types:
#          floating labyrinth exits and furniture minivaults.
###############################################################################

{{
function lab_portal(e)
  local timeout_turns = crawl.random_range(400, 600)

  local messager =
    timed_msg {
      initmsg = { "You hear a distant snort.",
                  "Hark! There is an entrance to a minotaur's labyrinth "
                  .. "on this level. Find the entrance quickly before "
                  .. "the gate is sealed!" },
      finalmsg = "You hear the last, dying ticks of the clock.",
      verb = 'ticking',
      noisemaker = 'clock'
    }

    e.lua_marker('O',
      timed_marker {
        turns = timeout_turns,
        msg = messager,
        floor = 'stone_arch',
        feat_tile = 'dngn_portal_labyrinth_gone',
        single_timed = true,
        dstname = 'lab' })
    e.kfeat("O = enter_labyrinth")
    e.tile("O = dngn_portal_labyrinth")
end

function lab_intruders(e)
  e.tags("patrolling")
  e.mons("earth elemental / minotaur skeleton")
  e.mons("redback")
  e.mons("shadow")
  e.mons("unseen horror")
  e.mons("hungry ghost")
  e.mons("gargoyle")
  e.kmons("7 = basilisk")
  e.kmons("8 = troll skeleton / centaur skeleton / \
               spriggan skeleton / ogre skeleton")
  e.shuffle("1'0d / 1'0d / 20'd / 20'd / '2'd / '2'd / \
             '2'd / 000d / 000d / 000d / 000d / ''''")
  e.subst("2 : 2:60 3:30 4")
  e.subst("0 : 5:30 678")
  e.item("any weapon w:14 no_pickup / any armour w:14 no_pickup / \
          any missile w:3 no_pickup / any wand no_pickup / \
          any scroll no_pickup / any jewellery no_pickup / gold no_pickup w:19")
end
}}

#############################################################################
# Labyrinth entry vaults

NAME:   lab_entry_generic
TAGS:   transparent extra uniq_lab
# (Jan 2010) With the reduction in placement of Labyrinths to 10-20 (roughly
# across 24 levels) and changing to game-unique, chance of NOT having a
# Labyrinth was (1-285/10^4)^24 = ~49%. Increasing chance to 5% gives you
# (1-500/10^4)^24 = ~29% chance of NOT placing a Labyrinth, ~71% chance
# of getting a Labyrinth every game, skewed towards earlier depths.
# (Mar 2013) A long while later, there is general agreement that something
# should be changed about labyrinths to address perceived tedium.
# For now, trimming spawning depths to keep the minotaur more dangerous.
CHANCE: 5%
DEPTH:  D:11-, Orc:$, Lair
: lab_portal(_G)
MAP
O
ENDMAP

default-depth: Lab
#############################################################################
# Labyrinth exit minivaults
#############################################################################
# These are generated by "ORIENT: float".
# You *must* place the minotaur yourself! Only one minotaur per map, please.
# There must be an exit ({), leading back to the dungeon.
#
# You can use the "generate_loot" tag to indicate that you're not explicitly
# placing the loot and that the dungeon builder should generate random loot
# (on the upstair). Note that this is not the default, and if you neither use
# this tag nor provide loot in the map definition, the player will be
# disappointed.
#
# One layer of floor space *must* surround the minivault, or the player could
# be trapped in the labyrinth (the dummy is exempt from this requirement).
#############################################################################

#############################################################################
# Dummy balancer
NAME: labyrinth_0
TAGS: dummy
ORIENT: float
WEIGHT: 20
MAP
x
ENDMAP

#############################################################################
# Watery exit
NAME:    labyrinth_watery
TAGS:    generate_loot no_pool_fixup
ORIENT:  float
MONS:    patrolling generate_awake minotaur
SUBST:   b:vvb
MAP
.........
.bbbbbbb.
.bwwwwwb.
.bww{wwb.
.bw...wb.
.bbb1bbb.
.b.....b.
.bbb+bbb.
.........
ENDMAP

#############################################################################
# Green exit
NAME:   labyrinth_green
TAGS:   generate_loot
ORIENT: float
MONS:   patrolling generate_awake minotaur
WEIGHT: 2
MAP
........
.bbbbbb.
.+..1{b.
.bbbbbb.
........
ENDMAP

#############################################################################
# Spiral exit
NAME:   labyrinth_spiral
TAGS:   generate_loot
ORIENT: float
MONS:   patrolling generate_awake minotaur
SUBST:  b : bvz, z = vb
MAP
............
.bbbbbbbbbb.
.b........b.
.b.bbbbbb.b.
.b.b{1..b.b.
.b.bbbb.b.b.
.b......b.b.
.bbbbbbbb.b.
..........b.
.bbbbbbbbbb.
............
ENDMAP

#############################################################################
# Hidden exit, and trapped loot
NAME:   labyrinth_hidden_loot
TAGS:   generate_loot
ORIENT: float
MONS:   patrolling minotaur, minotaur zombie
SUBST:  d = 2%*
SUBST:  b : bvv
MAP
............
.bbbbbbbbbb.
.bxxxxdxxxb.
.bxxxx+xxxb.
.bxx1.U.xxb.
.bd+U...xxb.
.bxx...U+db.
.bxx.{..xxb.
.bxxxx+xxxb.
.bxxxx.xxxb.
.bbbbb+bbbb.
............
ENDMAP

#############################################################################
# Mini labyrinth exit
NAME:    labyrinth_mini_lab
TAGS:    generate_loot
ORIENT:  float
SHUFFLE: def, ghi, klm
SUBST:   d : b, e : ., f : b
SUBST:   g : b, h : ., i : b
SUBST:   k = {, l = ., m = .
KMONS:   { = patrolling generate_awake minotaur
KFEAT:   { : exit_labyrinth
SUBST:   b : vvb
# should not be necessary
validate {{ return has_exit_from_glyph('{') }}
MAP
...............
.bbbbbbbbbbbbb.
.bm....k....lb.
.bgbebbbbdbbfb.
.b.b.........b.
.b.bbbfb.bbbbb.
.b.....b.b...b.
.bbebb.b.h.bfb.
.b...b.b.iibfb.
.b.b.b.b.f.bfb.
.b.b.g.b.b.bfb.
.b.b.bdbhb.bfb.
.b.b.......gfb.
.bdbbbebbbbbfb.
...............
ENDMAP

#############################################################################
# Chooses four corpses, each with their own set of loot, themed around some
# particular archetypical species/background. Each set of loot has at least
# three guaranteed items.
# The dead octopode has a 62% chance of generating only 3 rings,
# a 93% chance of generating 4 or less rings, and a 99% chance of
# 5 or less. The chance of all 8 is 0.0006%.

NAME: nicolae_lab_dead_adventurers
ORIENT: float
KMONS: m = patrolling generate_awake minotaur
KPROP: ABCD'm = bloody
KFEAT: ' = floor
SHUFFLE: bxvc, ABCDEFHIJKLM
{{
 -- Dwarven fighter. Maybe the minotaur got the last MD. 3 items.
dgn.delayed_decay_extra(_G, 'A', 'dwarf skeleton', 'battleaxe / '
   .. "eveningstar / executioner's axe w:2 / "
   .. 'great mace w:2, helmet good_item / '
   .. 'pair of gloves good_item / pair of boots good_item, '
   .. 'plate armour / crystal plate armour w:2' )

 -- Elf caster. 4 items.
dgn.delayed_decay_extra(_G, 'B', 'elf skeleton', 'robe, randbook, '
   .. 'any magical staff, any jewellery' )

 -- Spriggan stabber. 4 items.
dgn.delayed_decay_extra(_G, 'C', 'spriggan skeleton', 'dagger good_item / '
   .. 'quick blade w:1, bread ration, cloak, randbook disc:hexes / any book' )

 -- Centaur hunter of Fedhas. 3-4 (stacks of) items.
dgn.delayed_decay_extra(_G, 'D', 'centaur skeleton', 'shortbow good_item / longbow w:2, '
   .. 'arrow good_item, fruit w:50 / nothing, '
   .. 'helmet / centaur barding / pair of gloves' )

 -- Dwarven artificer. 3 items.
dgn.delayed_decay_extra(_G, 'E', 'dwarf skeleton', 'any wand, any wand, '
   .. 'any wand / any misc / any rod' )

 -- Dead octopode. 3 rings, possibly up to 8, though with a very low chance.
dgn.delayed_decay_extra(_G, 'F', 'octopode corpse', 'any ring good_item, '
   .. 'any ring good_item / any ring, any ring, any ring w:1 / nothing w:10, '
   .. 'any ring w:1 / nothing w:10, any ring w:1 / nothing w:10, '
   .. 'any ring w:1 / nothing w:10, any ring w:1 / nothing w:10' )

 -- Merfolk skald. 3 items.
dgn.delayed_decay_extra(_G, 'H', 'merfolk skeleton', 'leather armour good_item w:30 / '
   .. 'swamp dragon armour w:2 / fire dragon armour w:2 / '
   .. 'ice dragon armour w:2, trident / demon trident / glaive / bardiche, '
   .. 'randbook disc:charms / any book' )

 -- Human wanderer. 3-5 items.
dgn.delayed_decay_extra(_G, 'I', 'human skeleton', 'any armour, any weapon, '
   .. 'any good_item / any book / any jewellery, '
   .. 'nothing / any scroll, nothing / any potion' )

 -- Orc fighter. 3 items.
dgn.delayed_decay_extra(_G, 'J', 'orc skeleton', 'shield / large shield w:2, '
   .. 'long sword / eveningstar / broad axe / demon blade, '
   .. 'plate armour / crystal plate armour w:2' )

 -- Dwarven heavy armour earth elementalist. 3-4 items.
dgn.delayed_decay_extra(_G, 'K', 'dwarf skeleton', 'plate armour, '
   .. 'randbook disc:earth / any book, staff of earth / any magical staff, '
   .. 'ring of wizardry / any jewellery / nothing w:20' )

 -- Halfling warper. 4-5 items.
dgn.delayed_decay_extra(_G, 'L', 'halfling skeleton', 'tomahawk ego:dispersal / sling bullet, '
   .. 'randbook disc:translocation / any book, scroll of blinking / '
   .. 'scroll of teleportation / nothing w:45, '
   .. 'robe / leather armour, short sword good_item' )

 -- Ogre, maybe an ogre mage of some kind. 4-5 items.
dgn.delayed_decay_extra(_G, 'M', 'ogre skeleton', 'giant club good_item / '
   .. 'giant spiked club good_item, robe, large rock, meat ration, '
   .. 'any book / nothing' )
}}
MAP
...........
.xxxxxxxxx.
.xGAGBG.Gx.
.x{'''m..+.
.xGCGDG.Gx.
.xxxxxxxxx.
...........
ENDMAP

#############################################################################
# Labyrinth flavour minivaults
#############################################################################
# One layer of floor space *must* surround the minivault, or the player could
# be trapped in the labyrinth (the dummy is exempt from this requirement).
# Furniture vaults with non-empty outlines that still have orthogonal
# connections to floor inside the vault, and full inner connection,
# are still valid for generator connectivity though.
#
# These minivaults can be placed anywhere onto the labyrinth, making for
# easier navigation (as the number of connections increases) but can also add
# to confusion or despair (use teleportation very sparingly, and abstain from
# unthematic monster sets).
#
# Note that as of 12/15/13 most furniture vaults have been co-opted into
# vaults with random monster set-ups and items, for the sake of labyrinth
# sprucing up: see the commit history for reasons why.
#############################################################################

# Labyrinth dummy decorator
NAME: lab_dummy
TAGS: dummy
WEIGHT: 70
MAP
x
ENDMAP

NAME:    lab_block
SHUFFLE: vcx
: lab_intruders(_G)
MAP
..1.d
.xxx.
'xxx'
.xxx.
d.0..
ENDMAP

NAME: lab_fountain
: lab_intruders(_G)
MAP
 .....
..b1b..
.bb.bb.
.'dTd'.
.bb.bb.
..b0b..
 .....
ENDMAP

NAME:    lab_hedge
SHUFFLE: Pl
KMONS:   P = plant
: lab_intruders(_G)
MAP
....'....
.PP.d.PP.
.PcPPPcP.
1PcccccP0
.PcPPPcP.
.PP.d.PP.
....'....
ENDMAP

NAME:    lab_statue
: lab_intruders(_G)
MAP
.1d
'G'
d0.
ENDMAP


# Teaser: inaccessible loot
NAME:   labyrinth_glass_1
SUBST:  % = %*
WEIGHT: 9
MAP
1....'
.mmmm.
.mddm.
.mddm.
.mmmm.
'....0
ENDMAP

############################################################################
# Some basic furniture.

NAME: nicolae_lab_plus
SUBST: x : cvxb
: lab_intruders(_G)
MAP
  ...
 1.x..
..dx'..
.xxxxx.
..'xd..
 ..x.0
  ...
ENDMAP

NAME: nicolae_lab_t_cross
SUBST: x : cvxb
: lab_intruders(_G)
MAP
  .....
  .xxx.
..1.x....
.x.dx'.x.
.xxxxxxx.
.x.'xd.x.
....x.0..
  .xxx.
  .....
ENDMAP

NAME: nicolae_lab_arrow
SUBST: x : cvxb
: lab_intruders(_G)
MAP
  ....
 ...x..
...'dx..
0xxxxxx1
...'dx..
 ...x..
  ....
ENDMAP

NAME: nicolae_lab_dead_end
SUBST: x : cvbx
: lab_intruders(_G)
MAP
.......
.xxx0x.
.xdx'x.
.xdx.x.
.x1.'x.
.xxxxx.
.......
ENDMAP

NAME: nicolae_lab_very_dead_end
SUBST: " = "".
KPROP: z"d = bloody
: dgn.delayed_decay(_G, 'z', 'human skeleton / elf skeleton / dwarf skeleton')
: lab_intruders(_G)
MAP
.......
.xxxxx.
.xd"dx.
.x"z"x.
.x"""x.
.xx1xx.
..'0'..
ENDMAP

NAME: nicolae_lab_lava
: lab_intruders(_G)
MAP
'.d1
.lld
.ll.
0..'
ENDMAP

NAME: nicolae_lab_garden
KMONS: P = plant
SUBST: w = wW
NSUBST: P = 1:1 / 2:' / 1:0 / 2:d / *:P
: lab_intruders(_G)
MAP
PPPPP
PwwwP
PwtwP
PwwwP
PPPPP
ENDMAP

##########
# Aforementioned furniture vaults with non-empty outlines.

NAME: nicolae_lab_checkerboard
: lab_intruders(_G)
MAP
x.x'x
.xdx.
x1x0x
.xdx.
x'x.x
ENDMAP

NAME: nicolae_lab_starburst
SUBST: m = .xGT
SUBST: x : cvxb
: lab_intruders(_G)
MAP
x..x..x
.x.x.x.
..'d1..
xx.m.xx
..0d'..
.x.x.x.
x..x..x
ENDMAP

NAME: nicolae_lab_diamond
KMONS: P = plant
SUBST: x : cvxbP
: lab_intruders(_G)
MAP
1.x.'
.x.x.
xd.dx
.x.x.
'.x.0
ENDMAP

NAME: nicolae_lab_quarters
SUBST: m = .xGT
SUBST: x : cvxb
: lab_intruders(_G)
MAP
.xx.xx.
x1.x..x
x.dx'.x
.xxmxx.
x.'xd.x
x..x.0x
.xx.xx.
ENDMAP

NAME: nicolae_lab_blocks
SUBST: x : cvxb
: lab_intruders(_G)
MAP
x.xx.xx.x
.d.....1.
x.xx.xx.x
x.xx.xx.x
...'.'...
x.xx.xx.x
x.xx.xx.x
.0.....d.
x.xx.xx.x
ENDMAP

NAME: nicolae_lab_grate
SUBST: x : cvxb
: lab_intruders(_G)
MAP
.x.x.x.x.x.
...x.x.1.x.
.x.x.x.x.x.
.x'xd.dx'x.
.x.x.x.x.x.
.x.0.x.x...
.x.x.x.x.x.
ENDMAP

NAME: nicolae_lab_grate_2
SUBST: x : cvxb
: lab_intruders(_G)
MAP
x.x...x
..x'x..
x.0dx.x
x.xd1.x
..x'x..
x...x.x
ENDMAP

NAME: nicolae_lab_x
SUBST: x : cvxb
: lab_intruders(_G)
MAP
x.     .x
.x.   'x.
 1x. .x.
  .xdx.
   .x.
  .xdx.
 .x. .x0
.x'   .x.
x.     .x
ENDMAP

NAME: nicolae_lab_hexagon
KMONS: P = plant
SUBST: m : GxcvbPwl.
: lab_intruders(_G)
MAP
 .G.
G'd.G
.0m1.
G.d'G
 .G.
ENDMAP

NAME: nicolae_lab_swirl
SUBST: x : cvxb
: lab_intruders(_G)
MAP
 .x.
  1x.   .
  .x. .'x
   dx.xx.
 ..xxx..
.xx.xd
x'. .x.
.   .x0
     .x.
ENDMAP

NAME: nicolae_lab_big_swirl
SUBST: x : cvxb
: lab_intruders(_G)
MAP
  .x.
   1x.
   .x.     .
    .x.  .'x
    .x...xx.
   .dxxxx..
 ..xxxxd.
.xx...x.
x'.  .x.
.     .x.
      0x.
       .x.
ENDMAP

NAME: nicolae_lab_flowing_pool
SHUFFLE: wP/wP/wT/lA
KFEAT: A = exit_through_abyss
SUBST: P = w
: lab_intruders(_G)
MAP
 .ww. .w.
  ..w.1w.
.w.ww.www.
w'w..dw..
w..wwwd.w
. .wPwww.
 wwwww.ww.
ww..0w.w'
.. .w. .w
ENDMAP

############################################################################
# Pre-existing furniture vaults that didn't really fit having monsters
# and items inserted into them. Still usually somewhat substantial.

NAME:   labyrinth_glass_2
TAGS:   extra
WEIGHT: 1
MAP
......
.nnnn.
.n||n.
.n||n.
.nnnn.
......
ENDMAP

############################################################################

# The other minotaur's lava lair
NAME: labyrinth_lava_lair
TAGS: allow_dup
NSUBST: l = 2:L / *:l
KITEM: S = minotaur skeleton
KMONS: L = lava snake
KFEAT: L = l
MAP
.......
.lllll.
.l***l.
.L*S*l.
.l***l.
.llLll.
.......
ENDMAP

# Baited teleport trap - this is evil!
NAME:    labyrinth_baited_teleportation_trap
TAGS:    extra
KFEAT:   Y = known permanent teleport trap / known zot trap / .
KITEM:   Y = any good_item
SHUFFLE: cxv
WEIGHT:  1
NSUBST:  = = 1:+ / *:+xx
MAP
.....
.x=x.
.=Y=.
.x=x.
.....
ENDMAP

# Teaser: fake exit
NAME:  labyrinth_fake_exit
TAGS:  extra
KFEAT: X = exit_through_abyss
MAP
........
.vvvvvv.
.v...Xv.
.v.vvvv
.v....v.
.vvvv+v.
........
ENDMAP
# Disheartened?

# The remains of a previous adventurer.
# No items. Maybe the minotaur got them.
NAME:   labyrinth_skeletal_remains
TAGS:   allow_dup extra
WEIGHT: 40
: dgn.delayed_decay(_G, 'd', 'human skeleton / troll skeleton / centaur skeleton / ogre skeleton')
MAP
d
ENDMAP

############################################################################

# Maybe it's time to try starting over from someplace else?
NAME: nicolae_lab_do_over
TAGS: extra
KFEAT: t = known teleport trap
MAP
.....
.x.x.
..t..
.x.x.
.....
ENDMAP

NAME: nicolae_lab_stuck
TAGS: extra
: dgn.delayed_decay(_G, 'v', 'human skeleton')
KITEM: w = wand of digging charges:0 ident:all /\
           wand of teleportation charges:0 ident:all
KPROP: w'v = no_tele_into
MAP
......
.mmmm.
.mv'm.
.m'wm.
.mmmm.
......
ENDMAP

NAME: nicolae_lab_statue
TAGS: extra
MAP
 .
.G.
 .
ENDMAP
