##########################################################################
# Helper function to weight the secondary food vaults properly.
# We want each level in the range to have a roughly even chance of placing
# the vault.
# The uppermost level we place it on is D:7, and the lowermost is D:14;
# thus the first level, D:7, has a 1 in 8 chance of placing it. If it
# doesn't place on D:7, D:8 has a 1 in 7 chance of placing it; D:9 has a
# 1 in 6 chance, etc. up until D:14 has a 100% chance.
# If the levels are traversed in order, there is therefore an even
# distribution of where the food vault is placed.
##########################################################################
{{
function food_weight(e, top)
  for i = 14, top, -1 do
    e.depth_weight("D:" .. i, 10000 / (15 - i))
  end
end
}}
##########################################################################
# Guarantee at least some really minimal food supply.
##########################################################################

NAME:   first_ration
DEPTH:  D:2-5
CHANCE: 2500, 3333 (D:3), 5000 (D:4), 10000 (D:5)
TAGS:   uniq_first_food extra transparent
ITEM:   ration
MAP
d
ENDMAP

##########################################################################
# Midgame food supply.
#
# These should give around 20k nutrition.  Currently all strict
# carnivores have a large buffer so they can survive lulls in edible supply
# well until Crypt, so all-veggie is ok.

##############################################################################
# A number of fruity vaults, by blue_anna
# [Condensed into one vault by HangedMan.]
# [Ruined by wheals.]
#
# The "fruiting_plant" tag uses this as a subvault for food vaults.
#
# TODO: Using KMONS and KITEM, we could have fruits on the same
#       square as a plant, though it'd change nutrition averages.
NAME:   blue_anna_fruit_fields
TAGS:   fruiting_plant allow_dup unrand
KMONS:  P = plant
ITEM:   ration
NSUBST: . = 1:d / *:., " = 2:d / *:.
FTILE:  .dP = floor_grey_dirt / floor_grass w:20 / floor_dirt w:15
COLOUR: .dP = lightgrey / green w:20 / brown w:15
MAP
.""".
."P".
.""".
.....
ENDMAP

NAME:   the_bakery
DEPTH:  D:7-14
# Previously this was a 25% CHANCE; I'm assuming this was meant to weight this
# higher than the other food vaults, which mostly had a 15% CHANCE, but
# placing by chance tag doesn't work that way. Hence, there's also a WEIGHT
# tag to give it more weight than other food vaults.
: food_weight(_G, 7)
WEIGHT: 25
TAGS:   uniq_second_food extra chance_second_food
ITEM:   ration q:2
: if crawl.one_chance_in(8) then
:   dgn.delayed_decay(_G, 'e', 'spriggan name:baked n_adj n_spe n_des corpse')
: else
SUBST: =e = x
: end
SUBST: = = +
MONS:   spriggan col:white name:baker n_suf ; robe . dagger
MAP
xxxxxx
xdd=ex
x.xxxx
x.1xxx
x+xxxx
ENDMAP

NAME:   david_nohive_1
DEPTH:  D:8-14
: food_weight(_G, 8)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food
MONS:   queen bee, killer bee
ITEM:   ration tile:food_honeycomb
COLOUR: a = yellow
TILE:   a = wall_wax
SUBST:  a = x
NSUBST: 2 = 12:2 / * = 2.
SUBST:  d = d.
MAP
............
....aaaa....
..a2a2aaaa..
..aada2a2a..
.aa2ada2aaa.
.a2ada1ada2.
.aa2adada2a.
.aaa2a2a2aa.
..a2ada2aa..
...aa2aa2a..
....aaaa....
............
ENDMAP

NAME:     blue_anna_alchemist
DEPTH:    D:8-14
: food_weight(_G, 8)
WEIGHT: 15
TAGS:     uniq_second_food extra chance_second_food
SUBVAULT: X : fruiting_plant
SUBVAULT: W : fruiting_plant
KITEM:    p =  potion of degeneration w:5 / potion of ambrosia w:1 / nothing
MONS:     big kobold ; wand of flame ident:type . short sword
MAP
XXXXX..WWWWW
XXXXX..WWWWW
XXXXX..WWWWW
XXXXX..WWWWW
x.x.c++c.x.x
ccccc..ccccc
cppc....cppc
cp.+.1..+.pc
cccc....cccc
cccccccccccc
ENDMAP

# Not really a fish farm now that fish are gone...
NAME:   hangedman_fish_farm
DEPTH:  D:9-14
: food_weight(_G, 7)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food no_monster_gen no_pool_fixup \
        patrolling
KMONS:  A = merfolk ; spear
KFEAT:  g = shallow_water
ITEM:   ration q:2, throwing net
:       dgn.delayed_decay(_G, 'g', 'electric eel corpse')
MAP
xxxxxx
xgxedx
+..fAx
xWWWWx
xxxxxx
ENDMAP

NAME:   hangedman_pestilent_swarm
DEPTH:  D:8-14
: food_weight(_G, 8)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food no_monster_gen patrolling
MONS:   hornet / worm w:5 / worker ant
MONS:   hornet w:7 / soldier ant w:13
ITEM:   ration q:1 w:40 / ration q:2 w:10
MAP
.xxxxxxx
@xx.x.xcccc
 ..x1x2cddc
@xx.x.x+ddc
.x1x.x2cccc
 xxxxxxx
ENDMAP

NAME:   hangedman_little_slice_of_home
DEPTH:  D:8-14
: food_weight(_G, 8)
WEIGHT: 10
TAGS:   uniq_second_food extra chance_second_food
KMONS:  A = jelly
KMONS:  B = ooze
: if you.absdepth() > 10 then
KMONS:  C = slime creature
: end
KITEM:  C = ration q:4
KFEAT:  C = altar_jiyva w:1 / . w:20
KMASK:  W = no_monster_gen
MARKER: + = lua:props_marker({ door_restrict="veto" })
MAP
 .Wxxxxx
.Wxxxxxxx
@.xBBAxxx
 W+BxA+Cx
@.xBBAxxx
.Wxxxxxxx
 .Wxxxxxx
ENDMAP

NAME:     hangedman_ranch
DEPTH:    D:8-14
: food_weight(_G, 8)
WEIGHT:   10
TAGS:     uniq_second_food extra chance_second_food no_monster_gen patrolling
SUBVAULT: Z : fruiting_plant
KMONS:    A = three-headed hydra / w:5 two-headed hydra
KMONS:    B = dream sheep
KMONS:    C = yak
KMONS:    D = big kobold
KMONS:    E = big kobold ; nothing
KMONS:    F = plant
KITEM:    C = ration
KITEM:    E = falchion ego:flaming ident:type / \
              hand axe ego:flaming ident:type
KITEM:    H = ration q:2
KITEM:    I = halberd
KFEAT:    EF = shallow_water
MAP
cccccccccc
cAH+...CCc
cIDcD..BBc
c+ccm+++cc
x.WFZZZZZx
xFWWZZZZZx
xWEFZZZZZx
xFW.ZZZZZx
xFFW.W.W.x
xxxxx@xxxx
ENDMAP

NAME:    hangedman_stone_soup
DEPTH:   D:10-14
: food_weight(_G, 8)
WEIGHT:  10
TAGS:    uniq_second_food extra chance_second_food patrolling no_rotate no_vmirror
# Branch representatives working together to cook some soup:
# D, Orc, Elf, Swamp, Shoals, Vaults, Crypt, Hells.
KMONS:   A = kobold
KMONS:   B = orc
KMONS:   C = deep elf mage
KMONS:   D = spriggan
KMONS:   E = merfolk
KMONS:   F = human
KMONS:   G = necrophage
KMONS:   H = crimson imp
KITEM:   1 = stone q:1 w:50 no_pickup / large rock q:1 w:24 / \
             mundane hand axe w:1 no_pickup
KITEM:   Ya = ration
KITEM:   b = ration / nothing w:12
KFEAT:   1Yab = shallow_water
KMASK:   1Yac = no_monster_gen
MARKER:  Y = lua:fog_machine { cloud_type = "steam", pow_min = 1, \
                 pow_max = 10, delay = 60, size = 1, walk_dist = 0 }
MARKER:  Z = lua:fog_machine { cloud_type = "flame", pow_min = 100, pow_max = 100, \
                 delay = 10, size = 1, walk_dist = 0, excl_rad = 0 }
NSUBST:  c = 2:a / *:b
SHUFFLE: ABCDEFGH
MAP
 .......
..A...B..
..vv.vv..
..vcccv..
..vc1cv..
..vcYcv..
.CvvvvvD.
...Z.Z...
 .......
ENDMAP

# A tengu has staked out a little piece of the dungeon.
NAME:   grunt_tengu_nest
DEPTH:  D:10-14
: food_weight(_G, 10)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food no_monster_gen patrolling
MONS:   tengu warrior / tengu conjurer, plant
NSUBST: 2 : 3:2 / *:.
ITEM:   ration
MAP
 xx+xx
xx2.2xx
x22222x
x22122x
xd.t.dx
xxdddxx
 xxxxx
ENDMAP

# An ogre roasts intruders over his little campfire.
NAME:   grunt_ogre_cave
DEPTH:  D:7-14
: food_weight(_G, 7)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food no_monster_gen no_trap_gen \
        patrolling
{{
  local twochance = you.absdepth() - 8
  local onechance = 7 - twochance
  if twochance <= 0 then
    mons("ogre")
  elseif onechance <= 0 then
    mons("two-headed ogre")
  else
    mons("ogre w:" .. onechance .. " / two-headed ogre w:" .. twochance)
  end
  dgn.delayed_decay(_G, 'g', 'orc skeleton / human skeleton / elf skeleton'
                             .. ' / dwarf skeleton')
}}
ITEM:   ration q:3, ration q:1, throwing net
MARKER: O = lua:fog_machine { cloud_type = "flame", pow_min = 10, \
                              pow_max = 10, delay = 10, size = 1, \
                              walk_dist = 0, excl_rad = 0 }
MAP
 xxxxx
xxxxxxx
xxeegxx
xx1Ogxx
xxdf.xx
 xxx.xx
 xx.xxx
xxx.xxx
xx.xxx.
 .g.
  @
ENDMAP

NAME:   grunt_livestock
DEPTH:  D:7-14
: food_weight(_G, 7)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food no_monster_gen no_trap_gen \
        patrolling
MONS:   human ; animal skin . hand axe
{{
  local hog_weight = 14 - you.absdepth()
  if hog_weight <= 0 then
    mons("yak")
  else
    mons("hog w:" .. hog_weight .. " / yak w:1")
  end
}}
ITEM:   ration q:2
ITEM:   ration q:1
KFEAT:  K = iron_grate
KFEAT:  - = open_door
MAP
.xxxxxxx
@+...edx
.x...1dx
 xKK-KKx
 x2...2x
 x.2.2.x
 xxxxxxx
ENDMAP

# Welcome to Pandemonium Pizzeria; is this for carry-out or delivery?
# (Ideally the cashier would have a silly hat, but they can't wear hats.)
NAME:   grunt_pizzeria
DEPTH:  D:8-14
: food_weight(_G, 8)
WEIGHT: 10
TAGS:   uniq_second_food extra chance_second_food no_monster_gen no_trap_gen \
        patrolling
MONS:   human ; short sword | rapier / \
        orc warrior ; dagger / \
        spriggan ; dagger
ITEM:   ration tile:food_pizza
MARKER: O = lua:fog_machine { cloud_type = "flame", pow_min = 10, \
                              pow_max = 10, delay = 10, size = 1, \
                              walk_dist = 0, excl_rad = 0 }
MAP
xxxxxxx
xvvvdex
xvO+..x
xvvv.xx
x$1...x
xmmm.xx
x.....x
xmm+mmx
 ..@..
ENDMAP
