###############################################################################
# shops.des: The file for minivaults centered around a single shops. The
#            generic vaults, with the 'shop' tag, can be placed by themselves
#            or in sets of multiple shops throughout valid levels. The themed
#            vaults are excluded from the latter, but are collected here for
#            ease of reference.
#
# <<1>>      Generic
# <<2>>      Themed
# <<3>>      Untagged
#
###############################################################################

lua {{
require('dlua/vault.lua')

MAX_RANDOM_SHOPS = 5

-- If a level gets shops, how many there are.
-- Just one most of the time; expected value is 1.42.
function num_shops()
    if crawl.x_chance_in_y(5, 6) then
        return 1
    else
        return crawl.random_range(2, MAX_RANDOM_SHOPS)
    end
end

function ks_shop_vault(e, glyphs)
  if e.is_validating() then
    e.subst('O = B')
    return
  end

  local is_shop = false
  local is_altar = false

  local params = dgn.map_parameters()
  if params ~= nil then
    local tag = unpack(params)
    if tag ~= nil then
      if tag == "shop" then
        is_shop = true
      elseif string.find(tag, "temple_overflow_generic_") ~= nil then
        is_altar = true
      end
    end
  end

  if is_shop then
    e.kfeat('O = any shop')
  elseif is_altar then
    e.subst('O = B')
  else
    e.tags('extra decor')
    e.subst('O = ' .. glyphs)
  end
end
}}

# XXX: Don't change the name of this vault!
# Gozag code uses it to find out where shops can normally place.
NAME: serial_shops
TAGS: allow_dup extra luniq
DEPTH:  D:11-, Depths, Orc:1, Shoals, Snake, Vaults
CHANCE: 100% (D:11)
CHANCE: 10% (D:12-)
CHANCE: 20% (Depths:1)
CHANCE: 100% (Depths:2)
CHANCE: 20% (Depths:3)
CHANCE: 20% (Orc)
CHANCE: 60% (Vaults)
CHANCE: 30% (Shoals, Snake)
{{
hook("post_place", function()
    dgn.place_maps { tag = "bzr_entry", count = 1 }
end)
}}
MAP
ENDMAP
