###############################################################################
# abyss.des: abyss random minivaults, exits.
# Exit and rune vaults are placed by tag.
#
# Abyssal vaults should usually be minivaults and floating vaults, no larger
# than 28x23. Encompass vaults will be rejected at compile time, and
# other orientations will produce weird results.

{{
 -- Since abyssal stairs don't spawn at the bottom of the Abyss,
 -- replace a vault's empty guarded floor with a floor item at the bottom.
function init_abyss_exit(e, glyph)
  if you.depth() == dgn.br_depth(you.branch()) then
    if crawl.random2(10) > 3 then
      e.kfeat(glyph .. " = exit_abyss")
    else
      e.kitem(glyph .. " = any no_pickup")
    end
  else
    e.kfeat(glyph .. " = exit_abyss w:6 / abyssal_stair w:4")
  end
end

function abyss_entry(e, glyph)
  e.tags("extra luniq_enter_abyss chance_enter_abyss")
  e.depth_chance("Depths:4",   10000)
  e.depth_chance("Depths:5-",  3333)
-- D:21-27 entries for save compat, remove when TAG_MAJOR_VERSION > 34
  e.depth_chance("D:21-24", 3333)
  e.depth_chance("D:25",    10000)
  e.depth_chance("D:26-",   3333)
  e.kfeat(glyph .. ' = enter_abyss')
end
}}

###############################################################################
# Abyss entries.
# 1/3 chance to appear on Depths floors and guaranteed on Depths:4.
###############################################################################

default-depth: Depths:4-, D:21-

# This one is the backup and the one used in encompass vaults.
NAME: abyss_entry
TAGS: allow_dup overwrite_floor_cell no_exits replace_portal transparent
TAGS: fallback_enter_abyss
WEIGHT: 50
: abyss_entry(_G, 'O')
MAP
O
ENDMAP

NAME:    minmay_room_of_horrors
TAGS:    nolayout_encompass luniq_hellpanabyss_threat_entry
MONS:    small abomination, large abomination, unseen horror / chaos spawn
SHUFFLE: 123
: abyss_entry(_G, '_')
MAP
xxxxxx
x3113x
+1221x
x1221x
x311_x
xxxxxx
ENDMAP

NAME:  marbit_kobold_abyss_entry
TAGS:  no_monster_gen nolayout_encompass
WEIGHT: 5
MONS:  big kobold ; tomahawk ego:dispersal, kobold demonologist
: abyss_entry(_G, '_')
MAP
xxxxxxxxxxxxxxx
xxlllxx<.xlll.x
xlllllxx.lll..x
@x.llll..lll2_x
x.xl1lllllll.>x
xlllxlllx1lll.x
xxxxxxxxxxxxxxx
ENDMAP

NAME:    abyss_entry_small_statue_room
TAGS:    nolayout_encompass
: abyss_entry(_G, 'O')
MAP
xxxxx
xGOGx
xx+xx
ENDMAP

NAME:    abyss_entry_crystal
TAGS:    nolayout_encompass
: abyss_entry(_G, 'O')
SHUFFLE: AB
SUBST:   A : .:50 G:50 T U V Y t
SUBST:   B : .:100 G
MAP
  xxxxx
 xxbbbxx
xxbbObbxx
xbbA.Abbx
xbB...Bbx
xb.....bx
ENDMAP

NAME:    abyss_entry_glasseish
TAGS:    nolayout_encompass transparent
WEIGHT:  5
: abyss_entry(_G, 'O')
KPROP:   T = no_tele_into
SUBST:   T : T l 1 2 A X
MONS:    tentacled starspawn / starcursed mass / wretched star
MONS:    demonic plant
KFEAT:   X : stone_arch
MAP
nnn nnn
nTn.nTn
nnn.nnn
 ..O..
nnn.nnn
nTn.nTn
nnn nnn
ENDMAP

NAME:    abyss_entry_flame_altar
TAGS:    nolayout_encompass
: abyss_entry(_G, 'O')
SUBST:   A : deG
MARKER:  d = lua:fog_machine { cloud_type = "flame", \
             pow_min = 10, pow_max = 10, delay = 10, \
             size = 1, walk_dist = 0, spread_rate= 0, excl_rad = 0 }
MARKER:  e = lua:fog_machine { cloud_type = "seething chaos", \
             pow_min = 10, pow_max = 10, delay = 10, \
             size = 1, walk_dist = 0, spread_rate= 0, excl_rad = 0 }
KFEAT:   _ = altar_lugonu
MAP
 bbb
bbObb
bA_Ab
  @
ENDMAP

NAME:    hangedman_abyss_entry_splay
TAGS:    nolayout_encompass transparent
SHUFFLE: ABCDE
SUBST:   A : cxxx.., B : cxxx.., CDE = x, F : ccxxb
: abyss_entry(_G, 'O')
MAP
        xx..
        x.A.
        xx..
        x.C......
        xF.D.E.B.
      xxx.F.x.x.x
xxxxxxx.O.xxxxxxx
x.x.x.F.xxx
.B.E.D.Fx
......C.x
     ..xx
     .A.x
     ..xx
ENDMAP

NAME: nicolae_abyss_entry_one_way_or_another
TAGS: nolayout_encompass patrolling
: abyss_entry(_G, 'O')
NSUBST: 1 = 1111111112 / .
# All of these are guaranteed to have banishment in their spell sets.
# One in ten chance they get a distortion weapon too.
: local elfweapon = "long sword ego:distortion w:20 | quick blade " ..
:  "ego:distortion | rapier ego:distortion | dagger ego:distortion"
: local louiseweapon = "long sword ego:distortion | quick blade " ..
:  "ego:distortion | battleaxe ego:distortion | hand axe ego:distortion | " ..
:  "mace ego:distortion | flail ego:distortion | glaive ego:distortion w:2"
KMONS: 1 = Louise, deep elf demonologist / deep elf sorcerer w:5
: kmons( "2 = Louise ; " .. louiseweapon .. " , deep elf demonologist ; " ..
: elfweapon .. " / deep elf sorcerer w:5 ; " .. elfweapon)
MAP
   ......
  ..bbbb..
 ..b....b..
..b......b..
.b..bb1..b...
...b.1O1.b...
...b..1bb..b.
 ..b......b..
  ..b....b..
   ..bbbb..
    ......
ENDMAP

###############################################################################
# abyss random vaults
###############################################################################

default-depth: Abyss

###############################################################################
# Dummy vaults
NAME: abyss_furniture_dummy
TAGS: dummy
CHANCE: 0 : 90% (Abyss:1)
CHANCE: 0 : 80% (Abyss:2)
CHANCE: 0 : 70% (Abyss:3)
CHANCE: 0 : 60% (Abyss:4)
CHANCE: 0 : 50% (Abyss:5)

NAME: abyss_rune_dummy
TAGS: abyss_rune unrand dummy
CHANCE: 0 : 10%

# FIXME: the tag name is inaccurate with abyssal stairs placed by these vaults.
NAME: abyss_exit_dummy
TAGS: abyss_exit unrand dummy
CHANCE: 0 : 95% (Abyss:1)
CHANCE: 0 : 90% (Abyss:2)
CHANCE: 0 : 85% (Abyss:3)
CHANCE: 0 : 80% (Abyss:4)
CHANCE: 0 : 75% (Abyss:5)

NAME:    abyss_fake_exit
TAGS:    allow_dup
WEIGHT:  1
KFEAT:   O = exit_abyss mimic w:6 / abyssal_stair mimic w:4
MAP
O
ENDMAP

###############################################################################
NAME: abyss_furniture_001
TAGS: extra allow_dup
MAP
G.G
.V.
G.G
ENDMAP

#################################################################
# Ecumenical Temple... (1KB)
# 'cuz the fun haters removed overflow temples from the Abyss...
NAME:    abyss_greek_temple
TAGS:    no_rotate
NSUBST:  . = 3:1 / 2:2 / *:.
SUBST:   ' = .
COLOUR:  " : white w:5 / none
FTILE:   "ABCDEFGHIJKLMNOPRQS : floor_limestone w:5 / floor_nerves
SUBST:   " = .
MONS:    plant, bush
SHUFFLE: ABCDEFHIJKLMNOPQRS
KFEAT:   A = altar_makhleb
KFEAT:   B = altar_xom
KFEAT:   C = altar_zin
KFEAT:   D = altar_the_shining_one
KFEAT:   E = altar_kikubaaqudgha
KFEAT:   F = altar_yredelemnul
KFEAT:   H = altar_vehumet
KFEAT:   I = altar_okawaru
KFEAT:   J = altar_sif_muna
KFEAT:   K = altar_trog
KFEAT:   L = altar_nemelex_xobeh
KFEAT:   M = altar_elyvilon
KFEAT:   N = altar_cheibriados
KFEAT:   O = altar_dithmenos
KFEAT:   P = altar_gozag
KFEAT:   Q = altar_qazlal
KFEAT:   R = altar_uskayaw
MAP
''''''...............
''ccccccccccccccccc..
''G'c"""D"""""P"""c..
''''c"A"""I"L"""""c..
''G'c"""E"""""Q"""ct.
''''+"B"""J"N"""C"c..
''G'c"""F"""""R"""c..
''''c"C"""K"O"""A"c.t
''G'c"""H"""""S"""c..
''ccccccccccccccccc..
.......t......ttt....
ENDMAP

# <bh> I got the idea after I introduced a bug where the whole floor of
#        the abyss turned into altars
NAME:   bh_abyss_xom_lugonu_altar
TAGS:   extra allow_dup
COLOUR: " : magenta w:2 / white
KFEAT:   _ = altar_lugonu
KFEAT:   X = altar_xom
SUBST:   a = XXX"
SUBST:   b = X"
SUBST:   c = XX"
SUBST:   d = X""
SUBST:   e = X"""
MAP
   ebe
  dcacd
 ec"""ce
 ba"_"ab
 ec"""ce
  dcacd
   ebe
ENDMAP

NAME:    hangedman_abyss_feature_spike
TAGS:    extra no_item_gen no_pool_fixup allow_dup
MONS:    fungus, plant, bush
ITEM:    stone q:1, large rock q:1
KFEAT:   - = altar_lugonu
KMASK:   wWl = no_monster_gen
SHUFFLE: fghij / opqrs, fghijopqrs / JKLMNOPQRS
SHUFFLE: fghij / fffff / fffff / fffff / fffff / fghgf / fgfgf / ffhii / ffhii
SHUFFLE: opqrs / ooooo / ooooo / ooooo / ooooo / opqpo / opopo / ooqrr / ooqrr
SHUFFLE: JKLMN / JJJJJ / JJJJJ / JJJJJ / JJJJJ / JKLKJ / JKJKJ / JJLMM / JJLMM
SHUFFLE: OPQRS / OOOOO / OOOOO / OOOOO / OOOOO / OPQPO / OPOPO / OOQRR / OOQRR
SUBST:   f = %, g = C, h = T, i = U, j = V
SUBST:   o = t, p = G, q = w, r = W, s = l
SUBST:   J = x, K = c, L = v, MN = m, O = 1, P = 2, Q = 3, RS = b
CLEAR:   -
SHUFFLE: AACCTTUUVYYdeefghi, tGGwWlI, xxccvvbbmm+123
: dgn.delayed_decay(_G, '%', 'human skeleton')
MAP
        .....
        .LqL.
        .QhQ.
        .....
          .
     .          .
    ....      ....
    .pK.      .Mr.
    .Pg.      .iR.
    ....      ....
          -
 .                 .
....             ....
.oJ.             .Ns.
.Of.             .jS.
....             ....
ENDMAP

NAME:   hangedman_abyss_or_decor_stabs
TAGS:   transparent no_pool_fixup decor
DEPTH:  D, Depths, Abyss
: if you.in_branch("Abyss") then
SUBST:  xc = xxxxcccb, ' = %0, " = wl...
: else
TAGS:   extra
SUBST:  '" = ., c : xxc
: end
MAP
...."
.cxx.
.x'..."
.x.cxx.
"..x'..."
  .x.cxx.
  "..x'..."
    .x.cxx.
    "..x'..
      .x.
      "..
ENDMAP

NAME:   hangedman_abyss_or_decor_jellyfish_corner
TAGS:   transparent decor
DEPTH:  D:4-, Depths, Abyss
WEIGHT: 5 (D), 10
: if you.in_branch("Abyss") then
SUBST:  x : XXCB, c : CB, X = xxxxcb, C = xccccb, B = xcbbbb
SUBST:  HIJ = cbw,  ' = 000., " = %%%.
: else
TAGS:   extra
SUBST:  '" = ., c : xxc, H : xc.., I : xc.., J : xc..
: end
MAP
       .c
      .xc
     .xcc
    @x..c......
   @x..'ccxx...
  .x..H"c".xxx.
 .x..H'"c'.....
.xc.'"""c.I...
ccccccccc...J.
   .c"'..x....
   .x..I..x...
   .xx.....xx.
   ..x..J..xx.
   ..x........
   ....
ENDMAP

NAME:    hangedman_abyss_or_decor_lesser_grid
TAGS:    transparent no_pool_fixup decor
DEPTH:   D, Depths, Abyss
: if you.in_branch("Abyss") then
SHUFFLE: ABCDEF, "'
SUBST:   A : cbx.., B : cbx., C : cbx.., D : cbx., E : cbx.., F : cbx.
SUBST:   " = 0., ' = %*..., X = wl.
: else
TAGS:    extra
SUBST:   '" = ., X : x.
SUBST:   A : xxc., B : xxc., C : xxc., D : xxc., E : xxc., F : xxc.
: end
MAP
.......
.AB....
.BA.X..
.'".......
.CD"EF"xx.
.DC'FE'xx.
.......'"....
   ..X.FE....
   ....EF.X..
   ....'"....
      .DC"BA.
      .CD'AB.
      .......
ENDMAP

NAME:    hangedman_abyss_or_decor_clamps
TAGS:    transparent no_pool_fixup decor
DEPTH:   D:8-, Depths, Abyss
KFEAT:   @ = +
SHUFFLE: ABCDEFGH, '"
: if you.in_branch("Abyss") then
SUBST:   b = wlb., AB = wl., CD = xcb., EFGH = .
SUBST:   x = xxxxcccb, ' = 00., " = %%*.
: else
TAGS:    extra
SUBST:   b : bbwww., A : @, B : @xx, C : @xxxx, DEFGH = x, '" = .
: end
MAP
    xxAxx
    x...x
    B.'.C
    x...x
xxDxx...xxExx
x....b".....x
F.'.."b"..'.G
x......b....x
xxHxxx+xbx+xxxHxx
    x....b......x
    G.'.."b"..'.F
    x....."b....x
    xxExx...xxDxx
        x...x
        C.'.B
        x...x
        xxAxx
ENDMAP

NAME:    hangedman_abyss_or_decor_passed
TAGS:    transparent no_pool_fixup decor
DEPTH:   D:4-, Depths, Abyss
: if you.in_branch("Abyss") then
SUBST:   ' = 00., " = %%*..
SUBST:   x = xxxxcb, XY = ww...
: else
TAGS:    extra
SUBST:   x : xxxc, Y = x, X : x..
NSUBST:  ; = 1:@ / *:., : = 1:@ / *:., ` = 1:@ / *:.
: end
MAP
     x
 ;;;;x::::
 ;YX.x.XY:
 ;X..x..X:
 ;.......:
xxxx.x.xxxx
 `.......'x
 `X..x.X'"x
 `YX.x.'Y"x
 ````x'""xx
     xxxxx
ENDMAP

NAME:    hangedman_abyss_or_decor_stagger
TAGS:    transparent no_pool_fixup decor
DEPTH:   D:4-, Depths, Abyss
: if you.in_branch("Abyss") then
SUBST:   ' = 00., " = %%., X = xxcccb, x = xxxxxcccb
SUBST:   yY = ...xxxcbw, zZ = ...xxxcbl
: else
TAGS:    extra
SHUFFLE: yY, zZ
SUBST:   x : xxxxc, X : xxc, y : x.., z : x.., YZ'" = .
: end
MAP
..........
.xxxXxxx..
...'X"..z...
..."X'..Z...
.xxxXXXxxx..
..Y.."X'..z...
..y..'X"..Z...
 ..xxxXXXxxx..
 ...Y..'X"..z..
 ...y.."X'..Z..
   ..xxxXXXxxx.
   ...Y.."X'...
   ...y..'X"...
     ..xxxXxxx.
     ..........
ENDMAP

NAME:    hangedman_abyss_or_decor_slice
TAGS:    transparent no_pool_fixup decor
DEPTH:   D:4-, Depths, Abyss
WEIGHT:  5 (D), 10
: if you.in_branch("Abyss") then
SUBST:   ' = 00., " = %%., x = xxxxxcccb, cX = xxccb
: else
TAGS:    extra
SUBST:   x : xxxxc, c : xxc., X : xxc, '" = .
: end
MAP
        ..c
       ..X.
      ..c..
.......c'.
x"x'x"c.xxxx
xxxx.c"x'x"x
  .'c.......
 ..c..
 .X..
 c..
ENDMAP

NAME:   bh_abyss_negative
TAGS:   allow_dup decor
MAP
....      ....
.....     .....
.....     .....
.....     .....
 .....   .....
    .......
     .....
     .....
     .....
    .......
 .....   .....
.....     .....
.....     .....
.....     .....
 ....      ....
ENDMAP

###############################################################################
# Abyss Exit Vaults
# Note: Don't tag your abyss exit with allow_dup unless it's small and
# restrained in its gimmickry: there are more than enough abyss_exit vaults
# for the longest of given trips without having to repeat vault gimmicks
# and block seeing other vault gimmicks.
###############################################################################

NAME: abyss_exit_lava
TAGS: abyss_exit unrand allow_dup
: init_abyss_exit(_G, "O")
MAP
l.l
.O.
l.l
ENDMAP

NAME:  evilmike_abyss_exit_glass
TAGS:  abyss_exit
: init_abyss_exit(_G, "O")
MAP
 mmm@
mm.mm
m.O.m
mm.mm
 mmm
ENDMAP

NAME:  evilmike_abyss_exit_plants
TAGS:  abyss_exit
SUBST: 1 = 112.
SUBST: . = .:100 1
MONS:  demonic plant
MONS:  bush
: init_abyss_exit(_G, "O")
MAP
 .......
.........
..11111..
..12221..
..12O21..
..12221..
..11111..
.........
 .......
ENDMAP

NAME:  evilmike_abyss_exit_1
TAGS:  abyss_exit unrand allow_dup
: init_abyss_exit(_G, "O")
MAP
x+x
+O+
x+x
ENDMAP

NAME:  evilmike_abyss_exit_2
TAGS:  abyss_exit unrand allow_dup
SUBST: x = x:30 c:20 v:20 m:3 b:3
: init_abyss_exit(_G, "O")
MAP
  @ xxxx
 x.xxxxxxx
xx.x.....xx
xx.x.xxx.xx
xx.x.xOx.xx
xx.x.x.x.xx
xx.x...x.xx
xx.xxxxx.xx
xx.......xx
 xxxxxxxxx
  xxxxxxx
ENDMAP

NAME:  evilmike_abyss_exit_3
TAGS:  abyss_exit unrand allow_dup
SUBST: . = ..Wwl
: init_abyss_exit(_G, "O")
MAP
     .
    ...
   .....
  .......
 .........@
.....O.....
 .........
  .......
   .....
    ...
     .
ENDMAP

NAME:  evilmike_abyss_exit_4
TAGS:  abyss_exit unrand allow_dup
ITEM:  stone q:1 no_pickup
: init_abyss_exit(_G, "O")
MAP
    x
    x
  ..x..
  .dxd.
xxxxxxxxx
  .Oxd.
  ..x..
 .  x
@   x
ENDMAP

NAME:   evilmike_abyss_exit_5
TAGS:   abyss_exit unrand allow_dup
ITEM:   stone q:1 no_pickup
NSUBST: d = 1:O / *:d
: init_abyss_exit(_G, "O")
MAP
    x   x
  x x x x x
 xxxxxxxxxxx
  xdxdxdxdx
xxx+x+x+x+xxx
  x.........@
xxx+x+x+x+xxx
  xdxdxdxdx
 xxxxxxxxxxx
  x x x x x
    x   x
ENDMAP

NAME:  evilmike_abyss_exit_6
TAGS:  abyss_exit unrand allow_dup
SUBST: X: .x, x: xxxccvlw, .: ...W
: init_abyss_exit(_G, "O")
MAP
  x x x
 x x x x x
xxxxxxxxx x
xX.XxX.Xxx x
x.x.x.x.x x
@XxX.XxOxx x
xxxxxxxxx x
 x x x x x
  x x x
ENDMAP

NAME:  evilmike_abyss_exit_7
TAGS:  abyss_exit unrand allow_dup
SUBST: x:xxcv
: init_abyss_exit(_G, "O")
MAP
xx.xx
x.x.x
.xOx.
x.x.x
xx.xx
ENDMAP

NAME:  evilmike_abyss_exit_8
TAGS:  abyss_exit unrand allow_dup
SUBST: G : GGT, T : TV
: init_abyss_exit(_G, "O")
MAP
...G...
.G...G.
.......
G..O..G
.......
.G...G.
...G...
ENDMAP

NAME:  evilmike_abyss_exit_11
TAGS:  abyss_exit unrand allow_dup
SUBST: b = bbx
: init_abyss_exit(_G, "O")
MAP
   b.b
  bb.bb
 bb...bb
bb.....bb
b.......b
....O....
b.......b
bb.....bb
 bb...bb
  bb.bb
   b.b
ENDMAP

# Technically possible for this one to require dig, but pretty unlikely.
NAME:  evilmike_abyss_exit_12
TAGS:  abyss_exit
SUBST: X = x., x = xxx++.
: init_abyss_exit(_G, "O")
MAP
XXXxxxXXX
XxxxxxxxX
XxxxxxxxX
xxxxxxxxx
xxxxOxxx+
xxxxxxxxx
XxxxxxxxX
XxxxxxxxX
XXXxxxXXX
ENDMAP

NAME:  evilmike_abyss_exit_14
TAGS:  abyss_exit unrand allow_dup
SUBST: x = xcv, 0 = 0.
: init_abyss_exit(_G, "O")
MAP
x..x..x
.0.x.0.
...x...
xxxOxxx
...x...
.0.x.0.
x..x..x
ENDMAP

NAME:  evilmike_abyss_exit_17
TAGS:  abyss_exit unrand allow_dup
SUBST: x = xxc, . = ...W, 0 = 0.
: init_abyss_exit(_G, "O")
MAP
..xx0xx..
...xxx...
x...x...x
xx.V.V.xx
0xx.O.xx0
xx.V.V.xx
x...x...x
...xxx...
..xx0xx..
ENDMAP

# Fog machine parameters are the same as that swamp entry vault; you pretty
# much can't avoid the fog here, so I hope you have rMut.
NAME:   evilmike_abyss_exit_mutagenic
TAGS:   abyss_exit
MARKER: O = lua:fog_machine {                               \
                pow_min = 8, pow_max = 12, delay = 25,      \
                size = 2, walk_dist = 1, spread_rate = 33,  \
                cloud_type = "mutagenic fog"                \
            }
: init_abyss_exit(_G, "O")
MAP
...
.O.
...
ENDMAP

###################################################################
# Distorted/chaotic kobolds (abyss exit version!) (Jude)

NAME:  guppyfry_abyss_exit_glass_guarded
TAGS:  abyss_exit
: init_abyss_exit(_G, "O")
MAP
.............
.xmxmxmxmxmx.
m.m.......m.m
xm.mmm.mmm.mx
xxxx.....xxxx
x00...O...00x
xxxxxxlxxxxxx
lllllllllllll
mxmxmxmxmxmxx
.............
ENDMAP

NAME:  guppyfry_abyss_exit_spiral_guarded
TAGS:  abyss_exit unrand allow_dup
SUBST: - = llx
: init_abyss_exit(_G, "O")
MAP
.0---------0
.-........--
..--------.-
.--.....--.-
.-.-----.-.-
.-.--O--.-.-
.-.-.---.-.-
.-.--...--.-
.-.-------.-
.--.......--
.0---------0
ENDMAP

NAME:  bh_abyss_exit_spiral
TAGS:  abyss_exit unrand allow_dup
: init_abyss_exit(_G, "O")
MAP
 .xxxx.
  .xxxx.
    .xxx.
    .xx.
   ..x..
  ...O...
   ..x..
   .xx.
  .xxx.
   .xxxx.
    .xxxx.
ENDMAP

NAME:  bh_abyss_exit_grid
TAGS:  abyss_exit unrand allow_dup
SUBST: a = x.
SUBST: b = x..
SUBST: c = x...
: init_abyss_exit(_G, "O")
MAP
   b b b b b
  a.a.a.a.a.a
 a.x.x.x.x.x.a
b.x.x.x.x.x.x.b
 a.x.x.x.x.x.a
b.x.x.c.c.x.x.b
 a.x.c.0.c.x.a
b.x.x.c.c.x.x.b
 a.x.x.x.x.x.a
b.x.x.x.x.x.x.b
 a.x.x.x.x.x.a
  a.a.a.a.a.a
   b b b b b
ENDMAP

NAME:  bh_abyss_exit_choice
TAGS:  abyss_exit unrand transparent
DEPTH: Abyss:1-4
KFEAT: <: exit_abyss
KFEAT: >: abyssal_stair
MAP
xxxxxxxxxxx
x00........
x<0......>.
x00........
xxxxxxxxxxx
ENDMAP
